# Default values for api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

settings:
  registryBase: docker.io/conduction
  projectName: larping
  name: larping
  title: larping
  version: V1.0
  majorVersion: v1
  id: 9798cae6-187a-434f-bd66-f1dc2cc61466
  description: 'Naast deze JSON rest API is er ook een [graphql](/graphql) interface beschikbaar.'
  type: application
  repro: https://github.com/ConductionNL/larping
  demo: dev.larping.eu
  container: https://hub.docker.com/repository/docker/conduction/larping-php
  domain: larping.eu
  subdomain: false
  subpath: 
  subpathRouting: true
  organisationName: Conduction
  email: info@conduction.nl
  country: Netherlands
  state: Noord-Holland
  locality: Amsterdam
  unit: Common-Ground
  env: dev
  web: false
  internal: false
  debug: 1
  cache: false
  sessionDuration: 1800
  replicaCount: 1
  corsAllowOrigin: ['*']
  trustedHosts: '^.+$'
  pullPolicy: Always
  # You will need these proxies on kubernetes
  trustedProxies:
    - 10.0.0.0/8
    - 172.16.0.0/12
    - 192.168.0.0/16
  # If you are runnig a single component on a kubernetes cluster you can just easaliy enable the load balancer, if not you need to set up a multi component load balancer
  loadbalancerEnabled: false
  # If you want to enable NLX you are requered to add the appropreate certificates to you nlx-settings folder (located in the /api folder)
  nlxInwayEnabled: false
  # If you are runnig a single component on a kubernetes cluster you can just easaliy enable the load balancer, if not you need to set up a multi component load balancer
  notificationEnabled: false
  audittrailEnabled: false
  authorisationEnabled: false
  healthEnabled: false
  archiveEnabled: false

security:
  commongroundId: "7919a58b-3fd9-4931-ad70-2ccc1168ef23"
  commongroundKey: "7919a58b-3fd9-4931-ad70-2ccc1168ef23"
  applicationKey: "7919a58b-3fd9-4931-ad70-2ccc1168ef23"
  userKey: "45c1a4b6-59d3-4a6e-86bf-88a872f35845"
  authorisationProviderUser: https://uc.zuid-drecht.nl
  authorisationProviderApplication: https://openzaak.dev.zuid-drecht.nl/authorizaties/api/v1


php:
  repository: docker.io/conduction/protocomponent-php
  tag: latest
  mercure:
    jwtSecret: ""
  env: prod
  secret: ""
  replicaCount: 2

nginx:
  repository: docker.io/conduction/protocomponent-nginx
  tag: latest
  pullPolicy: Always
  replicaCount: 2

varnish:
  enabled: true
  #url: https://example.com
  repository: docker.io/conduction/protocomponent-varnish
  tag: latest
  pullPolicy: Always
  replicaCount: 1

postgresql:
  enabled: true
  imageTag: 10-alpine
  # If bringing your own PostgreSQL, the full uri to use
  #url: pgsql://api-platform:!ChangeMe!@example.com/api?serverVersion=10.1
  postgresqlUsername: "example"
  postgresqlPassword: "!ChangeMe!"
  postgresqlDatabase: "api"
  # Persistent Volume Storage configuration.
  # ref: https://kubernetes.io/docs/user-guide/persistent-volumes
  persistence:
    enabled: false
  pullPolicy: IfNotPresent
#  image:
#    repository: postgres
#    tag: alpine

mercure:
  enabled: true
  publishUrl: http://mercure/hub
  subscribeUrl: https://mercure.example.com/hub
  allowAnonymous: "1"
  corsAllowedOrigins: "^https?://.*?\\.example\\.com$"
  acmeHosts: "" # TODO: Fix the Mercure chart
  service:
    type: NodePort
    port: 80

redis:
    port: 6379
    version: 5.0
    memory: 100Mi
    cpu: 100m
    limits:
        memory: 200Mi
        cpu: 250m

ingress:
  annotations:
    # kubernetes.io/ingress.global-static-ip-name: chart-ip
    # kubernetes.io/ingress.class: gce
    # kubernetes.io/tls-acme: "true"
  tls:
    # Secrets must be manually created in the namespace, you can also use cert-manager.
    # - hosts:
      # - example.com
      # - mercure.example.com
  hosts:
    api:
      host: example.com
      serviceName: varnish
    mercure:
      host: mercure.example.com
      serviceName: mercure

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

commonground:
    eherkenning:
        location: https://larping.eu/eherkenning
    digispoof:
        location: https://larping.eu/digispoof
